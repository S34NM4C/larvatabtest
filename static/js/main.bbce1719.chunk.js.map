{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","components/Tab.js","components/Tabs.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","connect","fetch","headers","Accept","abiResponse","json","abi","configResponse","CONFIG","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","NETWORK","ID","SmartContractObj","CONTRACT_ADDRESS","on","updateAccount","location","reload","NAME","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","FinePrint","Tab","onClick","props","label","this","activeTab","className","Component","Tabs","onClickTabItem","tab","setState","children","map","child","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledLink","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","SCAN_LINK","SYMBOL","NFT_NAME","MAX_SUPPLY","MAX_VIP_SUPPLY","WEI_COST","DISPLAY_COST","VIP_WEI_COST","VIP_DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","SET_CONFIG","decrementMintAmount","newMintAmount","incrementMintAmount","getData","getConfig","config","useEffect","style","padding","backgroundColor","alt","src","borderRadius","border","boxShadow","textAlign","fontSize","fontWeight","color","target","href","length","substring","Number","e","preventDefault","lineHeight","disabled","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","vipMint","freeNFTs","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bbce1719.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const FinePrint = styled.p`\n  color: var(--primary-text);\n  font-size: 10px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  }\n\n  render() {\n    const {\n      onClick,\n      props: {\n        activeTab,\n        label,\n      },\n    } = this;\n\n    let className = 'tab-list-item';\n\n    if (activeTab === label) {\n      className += ' tab-list-active';\n    }\n\n    return (\n      <li\n        className={className}\n        onClick={onClick}\n      >\n        {label}\n      </li>\n    );\n  }\n}\n\nexport default Tab;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tab from './Tab';\n\nclass Tabs extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired,\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.children[0].props.label,\n    };\n  }\n\n  onClickTabItem = (tab) => {\n    this.setState({ activeTab: tab });\n  }\n\n  render() {\n    const {\n      onClickTabItem,\n      props: {\n        children,\n      },\n      state: {\n        activeTab,\n      }\n    } = this;\n\n    return (\n      <div className=\"tabs\">\n        <ol className=\"tab-list\">\n          {children.map((child) => {\n            const { label } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={label}\n                label={label}\n                onClick={onClickTabItem}\n              />\n            );\n          })}\n        </ol>\n        <div className=\"tab-content\">\n          {children.map((child) => {\n            if (child.props.label !== activeTab) return undefined;\n            return child.props.children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport Tabs from \"./components/Tabs\";\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--secondary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 100%;\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  font-weight: bold;\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    MAX_VIP_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    VIP_WEI_COST: 0,\n    VIP_DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `you're a lucky mfer, you just minted a shiny new ${CONFIG.NFT_NAME}.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const freeNFTs = () => {\n    let cost = CONFIG.VIP_WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(0);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .vipMint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `you're a lucky mfer, you just minted a shiny new ${CONFIG.NFT_NAME}.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 5) {\n      newMintAmount = 5;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n      >\n        <StyledLogo alt={\"logo\"} src={\"/config/images/larvamferbanner.png\"} />\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          <s.Container \n            flex={2} \n            jc={\"center\"} \n            ai={\"center\"} \n            image={\"/config/images/larvamferbest.png\"}\n            >\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"4px ridge var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n          <Tabs>\n          <div label=\"PUBLIC MINT\">\n          <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 60,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              LARVA MFERS\n            </s.TextTitle>\n            <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            by computerart.eth\n          </s.TextDescription>\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n            <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Peep the contract below\n                  </s.TextDescription>\n                  <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  (zhoug.eth recommends 2 helpings of D.Y.O.R. a day!!) \n                  </s.TextDescription>\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </StyledLink>\n            </s.TextDescription>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextTitle>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n            Get your LARVA MFER for the low price of 9.99\n             ({CONFIG.DISPLAY_COST}{\" \"}{CONFIG.NETWORK.SYMBOL})\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.\n                </s.TextTitle>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextTitle\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect your wallet to the {CONFIG.NETWORK.NAME} network\n                    </s.TextTitle>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT WALLET\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"MINTING...\" : \"MINT LARVAMFER\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n            <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n              <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  Click here to see the collection on OpenSea.io\n              </StyledLink>\n            </s.Container>\n          </div>\n          <div label=\"MFER ONLY MINT\">\n          <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 60,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              LARVA MFERS\n            </s.TextTitle>\n              <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}>\n                 This mint is for MFER and DADMFER holders only\n              </s.TextTitle>\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_VIP_SUPPLY}\n            </s.TextTitle>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_VIP_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The FREE LARVA MFERS are all gone. You can still mint vis the public sale.\n                </s.TextTitle>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextTitle>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n            The first 2000 larva mfers are FREE for MFER and DADMFER holders.  If you are not connected to a wallet with one of these NFTs please use the public mint function.\n                </s.TextTitle>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextTitle\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect your wallet to the {CONFIG.NETWORK.NAME} network\n                    </s.TextTitle>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT WALLET\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          freeNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"MINTING...\" : \"MFER ONLY MINT\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n            <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n              <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  Click here to see the collection on OpenSea.io\n              </StyledLink>\n            </s.Container> \n          </div>\n          </Tabs>\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container \n            flex={2} \n            jc={\"center\"} \n            ai={\"center\"} \n            image={\"/config/images/bargain_bin_meme.png\"}\n            >\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerSmall />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n        <s.TextDescription>\n            LARVA MFERS r generated entirely from hand drawings by computerart.eth. this project is in the public domain;\n          </s.TextDescription>\n          <s.TextDescription>\n            feel free to use LARVA MFERS any way u want.  inspired by sartoshi.  image engine and contract by zhoug.eth.  site by s34nm4c.eth\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.FinePrint\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            * Please make sure you are connected to the right network (\n            {CONFIG.NETWORK.NAME} Mainnet) and the correct address. \n          </s.FinePrint>\n          <s.FinePrint\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            ** Please note: Once you make the purchase, you cannot undo this action.\n          </s.FinePrint>\n          <s.FinePrint\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n            successfully mint your larva mfer.  We recommend that you don't lower the\n            gas limit.\n          </s.FinePrint>\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}